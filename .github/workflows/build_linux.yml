name: Linux build

on:
  pull_request:
    types: [opened, reopened]
    paths:
      - "*.h"
      - "*.cpp"
      - "CMakeLists.txt"
      - "cmake/**"
      - "examples/**.cpp"
      - "!**Makefile" # old build system is not tested in this workflow
      - ".github/workflows/build_linux.yml"
  push:
    paths:
      - "*.h"
      - "*.cpp"
      - "CMakeLists.txt"
      - "cmake/**"
      - "examples/**.cpp"
      - "!**Makefile" # old build system is not tested in this workflow
      - ".github/workflows/build_linux.yml"
  release:
    types: [published, edited]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  check_formatting:
    uses: nRF24/.github/.github/workflows/cpp_lint.yaml@main

  using_cmake:
    needs: check_formatting
    uses: nRF24/.github/.github/workflows/build_linux_cmake.yaml@main
    with:
      compiler: ${{ matrix.toolchain.compiler }}
      usr-dir: ${{ matrix.toolchain.usr_dir }}
      examples-path: examples
      deploy-release: ${{ github.event_name == 'release' && (matrix.toolchain.compiler == 'armhf' || matrix.toolchain.compiler == 'arm64') }}
      rf24network-ref: template-attempt2
      rf24mesh-ref: template-attempt2
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - compiler: "armhf"
            usr_dir: "arm-linux-gnueabihf"
          - compiler: "arm64"
            usr_dir: "aarch64-linux-gnu"
          # - compiler: "x86_64"
          #   usr_dir: "x86_64-linux-gnux32"
          # - compiler: "i686"
          #   usr_dir: "i686-linux-gnu"
          - compiler: "default" # github runner is hosted on a "amd64"
            usr_dir: "local" # use default compiler to test build all examples (including the ncurses ones)
